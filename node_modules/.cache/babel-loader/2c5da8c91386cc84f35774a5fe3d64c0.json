{"ast":null,"code":"var _jsxFileName = \"/home/rahul/india-choropleth-javascript/src/Views/react-google-maps.js\";\nimport { Map, Polygon, InfoWindow, Marker, HeatMap, GoogleApiWrapper } from 'google-maps-react';\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst data = require('../test02.json');\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seen: false\n    };\n  }\n\n  fetchPlaces(mapProps, map) {\n    const {\n      google\n    } = mapProps;\n    const service = new google.maps.places.PlacesService(map); // ...\n  }\n\n  onMapClicked(mapProps, map, clickEvent) {\n    // ...\n    console.log(clickEvent.latLng.lat());\n    console.log(clickEvent.latLng.lng());\n    this.setState({\n      seen: !this.state.seen\n    });\n  }\n\n  render() {\n    let data1 = [];\n\n    for (var i = 0; i < data.length; i++) {\n      var obj = data[i]; //console.log(\"Name: \" + obj.latitude + \", \" + obj.longitude);\n\n      data1 = data1.concat({\n        lat: obj.latitude,\n        lng: obj.longitude,\n        weight: obj.co2\n      });\n    }\n\n    console.log(data1);\n    const gradient = ['rgba(0, 255, 255, 0)', 'rgba(0, 255, 255, 1)', 'rgba(0, 191, 255, 1)', 'rgba(0, 127, 255, 1)', 'rgba(0, 63, 255, 1)', 'rgba(0, 0, 255, 1)', 'rgba(0, 0, 223, 1)', 'rgba(0, 0, 191, 1)', 'rgba(0, 0, 159, 1)', 'rgba(0, 0, 127, 1)', 'rgba(63, 0, 91, 1)', 'rgba(127, 0, 63, 1)', 'rgba(191, 0, 31, 1)', 'rgba(255, 0, 0, 1)'];\n    const positions = [{\n      lat: 25.782551,\n      lng: 85.445368,\n      weight: 4\n    }, {\n      lat: 25.792551,\n      lng: 85.405368,\n      weight: 5\n    }, {\n      lat: 0.42642725,\n      lng: 70.51513,\n      weight: 3.8728197\n    }, {\n      lat: 0.5560175,\n      lng: 70.81896,\n      weight: 3.8245197\n    }, {\n      lat: 0.67880213,\n      lng: 71.10717,\n      weight: 3.47403\n    }, {\n      lat: 5.692977,\n      lng: 93.166084,\n      weight: 4.47403\n    }, {\n      lat: 5.703118,\n      lng: 93.46106,\n      weight: 6.47403\n    }, {\n      lat: 5.7134805,\n      lng: 93.77106,\n      weight: 5.47403\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      style: {\n        height: '100%',\n        width: '90%',\n        position: 'relative',\n        marginLeft: '5%'\n      },\n      className: \"map\",\n      google: this.props.google,\n      zoom: 5,\n      onClick: this.onMapClicked,\n      initialCenter: {\n        lat: 22.5937,\n        lng: 78.9629\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HeatMap, {\n      gradient: gradient,\n      opacity: 0.6,\n      positions: data1,\n      radius: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    })), this.state.seen ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }, \"HI\") : null);\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyATgv28IzCv0bjkOBbAoejH-Z13BL4uV8U\",\n  libraries: ['visualization']\n})(MapContainer);","map":{"version":3,"sources":["/home/rahul/india-choropleth-javascript/src/Views/react-google-maps.js"],"names":["Map","Polygon","InfoWindow","Marker","HeatMap","GoogleApiWrapper","React","Container","Row","Col","data","require","MapContainer","Component","constructor","props","state","seen","fetchPlaces","mapProps","map","google","service","maps","places","PlacesService","onMapClicked","clickEvent","console","log","latLng","lat","lng","setState","render","data1","i","length","obj","concat","latitude","longitude","weight","co2","gradient","positions","height","width","position","marginLeft","apiKey","libraries"],"mappings":"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","sourcesContent":["import {Map, Polygon,InfoWindow,Marker, HeatMap, GoogleApiWrapper} from 'google-maps-react';\nimport React from 'react'\n\nimport { Container,Row,Col } from 'react-bootstrap';\n\nconst data = require('../test02.json');\n\n\nexport class MapContainer extends React.Component {\n constructor(props) {\n    super(props);\n\t this.state = {\n    \t\tseen: false\n  \t };\n   }\n\n    fetchPlaces(mapProps, map) {\n        const {google} = mapProps;\n        const service = new google.maps.places.PlacesService(map);\n        // ...\n      }\n    onMapClicked(mapProps, map, clickEvent) {\n        // ...\n        console.log(clickEvent.latLng.lat())\n        console.log(clickEvent.latLng.lng())\n\n \tthis.setState({\n      \t\tseen: !this.state.seen\n    \t});\n\n\n      }\n\n\n\n\n\n\t\t\n\n\n\n\t\n    render() {\n\tlet data1 = [];\n\t\tfor (var i = 0; i < data.length; i++){\n\t\t\tvar obj = data[i];\n\t\t\t//console.log(\"Name: \" + obj.latitude + \", \" + obj.longitude);\n\t\t\tdata1 = data1.concat({ lat: obj.latitude, lng: obj.longitude, weight:obj.co2 });\n\t\t\n\t\t}\n\n\n\n\t\t\n\t\tconsole.log(data1)\n\n\n          const gradient = [\n            'rgba(0, 255, 255, 0)',\n            'rgba(0, 255, 255, 1)',\n            'rgba(0, 191, 255, 1)',\n            'rgba(0, 127, 255, 1)',\n            'rgba(0, 63, 255, 1)',\n            'rgba(0, 0, 255, 1)',\n            'rgba(0, 0, 223, 1)',\n            'rgba(0, 0, 191, 1)',\n            'rgba(0, 0, 159, 1)',\n            'rgba(0, 0, 127, 1)',\n            'rgba(63, 0, 91, 1)',\n            'rgba(127, 0, 63, 1)',\n            'rgba(191, 0, 31, 1)',\n            'rgba(255, 0, 0, 1)'\n          ];\n\n          const positions = [\n            { lat: 25.782551, lng: 85.445368, weight:4 },\n            { lat: 25.792551, lng: 85.405368, weight:5 },\n            { lat: 0.42642725, lng: 70.51513, weight:3.8728197 },\n            { lat: 0.5560175, lng: 70.81896, weight:3.8245197 },\n            { lat: 0.67880213, lng: 71.10717, weight:3.47403 },\n            { lat: 5.692977, lng: 93.166084, weight:4.47403 },\n            { lat: 5.703118, lng: 93.46106, weight:6.47403 },\n            { lat: 5.7134805, lng: 93.77106, weight:5.47403 }\n\n        ];\n\n\n\n\n        return (\n            <div>\n            <Map\n                style={{height: '100%', width: '90%', position: 'relative', marginLeft: '5%'}}\n                className='map'\n                google={this.props.google}\n                zoom={5}\n                onClick={this.onMapClicked}\n                initialCenter={{\n                    lat: 22.5937,\n                    lng: 78.9629\n\n                }}\n            >\n\n                <HeatMap\n                    gradient={gradient}\n                    opacity={0.6}\n                    positions={data1}\n                    radius={10}\n                />\n\n                </Map>\n\n\t\t\t{this.state.seen ? <h1>HI</h1>  : null}\n\t\t\n\n            </div>\n        )\n    }\n}\n\n\nexport default GoogleApiWrapper({\n       apiKey: \"AIzaSyATgv28IzCv0bjkOBbAoejH-Z13BL4uV8U\",\n       libraries: ['visualization']\n})(MapContainer)\n"]},"metadata":{},"sourceType":"module"}