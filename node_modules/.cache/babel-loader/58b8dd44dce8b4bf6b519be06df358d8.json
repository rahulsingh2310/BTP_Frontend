{"ast":null,"code":"var _jsxFileName = \"/home/rahul/india-choropleth-javascript/src/App.js\";\nimport React, { useState } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport ReactTooltip from 'react-tooltip';\nimport LinearGradient from './LinearGradient.js';\nimport './App.css';\n/**\n* Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\n* Looking topojson for other countries/world?\n* Visit: https://github.com/markmarkoh/datamaps\n*/\n\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\n\n}; // Red Variants\n\nconst COLOR_RANGE = ['#ffedea', '#ffcec5', '#ffad9f', '#ff8a75', '#ff5533', '#e2492d', '#be3d26', '#9a311f', '#782618'];\nconst DEFAULT_COLOR = '#EEE';\n\nconst getRandomInt = () => {\n  return parseInt(Math.random() * 100);\n};\n\nconst geographyStyle = {\n  default: {\n    outline: 'none'\n  },\n  hover: {\n    fill: '#ccc',\n    transition: 'all 250ms',\n    outline: 'none'\n  },\n  pressed: {\n    outline: 'none'\n  }\n}; // will generate random heatmap data on every call\n\nconst getHeatMapData = () => {\n  return [{\n    id: 'AP',\n    state: 'Andhra Pradesh',\n    value: getRandomInt()\n  }, {\n    id: 'AR',\n    state: 'Arunachal Pradesh',\n    value: getRandomInt()\n  }, {\n    id: 'AS',\n    state: 'Assam',\n    value: getRandomInt()\n  }, {\n    id: 'BR',\n    state: 'Bihar',\n    value: getRandomInt()\n  }, {\n    id: 'CT',\n    state: 'Chhattisgarh',\n    value: getRandomInt()\n  }, {\n    id: 'GA',\n    state: 'Goa',\n    value: 21\n  }, {\n    id: 'GJ',\n    state: 'Gujarat',\n    value: 22\n  }, {\n    id: 'HR',\n    state: 'Haryana',\n    value: getRandomInt()\n  }, {\n    id: 'HP',\n    state: 'Himachal Pradesh',\n    value: 24\n  }, {\n    id: 'JH',\n    state: 'Jharkhand',\n    value: 26\n  }, {\n    id: 'KA',\n    state: 'Karnataka',\n    value: 27\n  }, {\n    id: 'KL',\n    state: 'Kerala',\n    value: getRandomInt()\n  }, {\n    id: 'MP',\n    state: 'Madhya Pradesh',\n    value: getRandomInt()\n  }, {\n    id: 'MH',\n    state: 'Maharashtra',\n    value: getRandomInt()\n  }, {\n    id: 'MN',\n    state: 'Manipur',\n    value: getRandomInt()\n  }, {\n    id: 'ML',\n    state: 'Meghalaya',\n    value: 59\n  }, {\n    id: 'MZ',\n    state: 'Mizoram',\n    value: getRandomInt()\n  }, {\n    id: 'NL',\n    state: 'Nagaland',\n    value: 59\n  }, {\n    id: 'OR',\n    state: 'Odisha',\n    value: 59\n  }, {\n    id: 'PB',\n    state: 'Punjab',\n    value: getRandomInt()\n  }, {\n    id: 'RJ',\n    state: 'Rajasthan',\n    value: getRandomInt()\n  }, {\n    id: 'SK',\n    state: 'Sikkim',\n    value: getRandomInt()\n  }, {\n    id: 'TN',\n    state: 'Tamil Nadu',\n    value: getRandomInt()\n  }, {\n    id: 'TG',\n    state: 'Telangana',\n    value: getRandomInt()\n  }, {\n    id: 'TR',\n    state: 'Tripura',\n    value: 14\n  }, {\n    id: 'UT',\n    state: 'Uttarakhand',\n    value: getRandomInt()\n  }, {\n    id: 'UP',\n    state: 'Uttar Pradesh',\n    value: 15\n  }, {\n    id: 'WB',\n    state: 'West Bengal',\n    value: 17\n  }, {\n    id: 'WB',\n    state: 'West Bengal',\n    value: 17\n  }, {\n    id: 'AN',\n    state: 'Andaman and Nicobar Islands',\n    value: getRandomInt()\n  }, {\n    id: 'CH',\n    state: 'Chandigarh',\n    value: getRandomInt()\n  }, {\n    id: 'DN',\n    state: 'Dadra and Nagar Haveli',\n    value: 19\n  }, {\n    id: 'DD',\n    state: 'Daman and Diu',\n    value: 20\n  }, {\n    id: 'DL',\n    state: 'Delhi',\n    value: 59\n  }, {\n    id: 'JK',\n    state: 'Jammu and Kashmir',\n    value: 25\n  }, {\n    id: 'LA',\n    state: 'Ladakh',\n    value: getRandomInt()\n  }, {\n    id: 'LD',\n    state: 'Lakshadweep',\n    value: getRandomInt()\n  }, {\n    id: 'PY',\n    state: 'Puducherry',\n    value: getRandomInt()\n  }];\n};\n\nfunction App() {\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [data, setData] = useState(getHeatMapData());\n  const gradientData = {\n    fromColor: COLOR_RANGE[0],\n    toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\n    min: 0,\n    max: data.reduce((max, item) => item.value > max ? item.value : max, 0)\n  };\n  const colorScale = scaleQuantile().domain(data.map(d => d.value)).range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = {\n    value: 'NA'\n  }) => {\n    return () => {\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent('');\n  };\n\n  const onChangeButtonClick = () => {\n    setData(getHeatMapData());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-width-height container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"no-margin center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"States and UTs\"), /*#__PURE__*/React.createElement(ReactTooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, tooltipContent), /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: PROJECTION_CONFIG,\n    projection: \"geoMercator\",\n    width: 600,\n    height: 220,\n    \"data-tip\": \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    zoom: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: INDIA_TOPO_JSON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    //console.log(geo.id);\n    const current = data.find(s => s.id === geo.id);\n    return /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      fill: current ? colorScale(current.value) : DEFAULT_COLOR,\n      style: geographyStyle,\n      onMouseEnter: onMouseEnter(geo, current),\n      onMouseLeave: onMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(LinearGradient, {\n    data: gradientData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"mt16\",\n    onClick: onChangeButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Change\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rahul/india-choropleth-javascript/src/App.js"],"names":["React","useState","ComposableMap","Geographies","Geography","scaleQuantile","ReactTooltip","LinearGradient","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","DEFAULT_COLOR","getRandomInt","parseInt","Math","random","geographyStyle","default","outline","hover","fill","transition","pressed","getHeatMapData","id","state","value","App","tooltipContent","setTooltipContent","data","setData","gradientData","fromColor","toColor","length","min","max","reduce","item","colorScale","domain","map","d","range","onMouseEnter","geo","current","properties","name","onMouseLeave","onChangeButtonClick","geographies","find","s","rsmKey"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport ReactTooltip from 'react-tooltip';\n\nimport LinearGradient from './LinearGradient.js';\nimport './App.css';\n\n/**\n* Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\n* Looking topojson for other countries/world?\n* Visit: https://github.com/markmarkoh/datamaps\n*/\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\n};\n\n// Red Variants\nconst COLOR_RANGE = [\n  '#ffedea',\n  '#ffcec5',\n  '#ffad9f',\n  '#ff8a75',\n  '#ff5533',\n  '#e2492d',\n  '#be3d26',\n  '#9a311f',\n  '#782618'\n];\n\nconst DEFAULT_COLOR = '#EEE';\n\nconst getRandomInt = () => {\n  return parseInt(Math.random() * 100);\n};\n\nconst geographyStyle = {\n  default: {\n    outline: 'none'\n  },\n  hover: {\n    fill: '#ccc',\n    transition: 'all 250ms',\n    outline: 'none'\n  },\n  pressed: {\n    outline: 'none'\n  }\n};\n\n// will generate random heatmap data on every call\nconst getHeatMapData = () => {\n  return [\n    { id: 'AP', state: 'Andhra Pradesh', value: getRandomInt() },\n    { id: 'AR', state: 'Arunachal Pradesh', value: getRandomInt() },\n    { id: 'AS', state: 'Assam', value: getRandomInt() },\n    { id: 'BR', state: 'Bihar', value: getRandomInt() },\n    { id: 'CT', state: 'Chhattisgarh', value: getRandomInt() },\n    { id: 'GA', state: 'Goa', value: 21 },\n    { id: 'GJ', state: 'Gujarat', value: 22 },\n    { id: 'HR', state: 'Haryana', value: getRandomInt() },\n    { id: 'HP', state: 'Himachal Pradesh', value: 24 },\n    { id: 'JH', state: 'Jharkhand', value: 26 },\n    { id: 'KA', state: 'Karnataka', value: 27 },\n    { id: 'KL', state: 'Kerala', value: getRandomInt() },\n    { id: 'MP', state: 'Madhya Pradesh', value: getRandomInt() },\n    { id: 'MH', state: 'Maharashtra', value: getRandomInt() },\n    { id: 'MN', state: 'Manipur', value: getRandomInt() },\n    { id: 'ML', state: 'Meghalaya', value: 59 },\n    { id: 'MZ', state: 'Mizoram', value: getRandomInt() },\n    { id: 'NL', state: 'Nagaland', value: 59 },\n    { id: 'OR', state: 'Odisha', value: 59 },\n    { id: 'PB', state: 'Punjab', value: getRandomInt() },\n    { id: 'RJ', state: 'Rajasthan', value: getRandomInt() },\n    { id: 'SK', state: 'Sikkim', value: getRandomInt() },\n    { id: 'TN', state: 'Tamil Nadu', value: getRandomInt() },\n    { id: 'TG', state: 'Telangana', value: getRandomInt() },\n    { id: 'TR', state: 'Tripura', value: 14 },\n    { id: 'UT', state: 'Uttarakhand', value: getRandomInt() },\n    { id: 'UP', state: 'Uttar Pradesh', value: 15 },\n    { id: 'WB', state: 'West Bengal', value: 17 },\n    { id: 'WB', state: 'West Bengal', value: 17 },\n    { id: 'AN', state: 'Andaman and Nicobar Islands', value: getRandomInt() },\n    { id: 'CH', state: 'Chandigarh', value: getRandomInt() },\n    { id: 'DN', state: 'Dadra and Nagar Haveli', value: 19 },\n    { id: 'DD', state: 'Daman and Diu', value: 20 },\n    { id: 'DL', state: 'Delhi', value: 59 },\n    { id: 'JK', state: 'Jammu and Kashmir', value: 25 },\n    { id: 'LA', state: 'Ladakh', value: getRandomInt() },\n    { id: 'LD', state: 'Lakshadweep', value: getRandomInt() },\n    { id: 'PY', state: 'Puducherry', value: getRandomInt() }\n  ];\n};\n\nfunction App() {\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [data, setData] = useState(getHeatMapData());\n\n  const gradientData = {\n    fromColor: COLOR_RANGE[0],\n    toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\n    min: 0,\n    max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\n  };\n\n  const colorScale = scaleQuantile()\n    .domain(data.map(d => d.value))\n    .range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\n    return () => {\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent('');\n  };\n\n  const onChangeButtonClick = () => {\n    setData(getHeatMapData());\n  };\n\n  return (\n    <div className=\"full-width-height container\">\n      <h1 className=\"no-margin center\">States and UTs</h1>\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\n        <ComposableMap\n          projectionConfig={PROJECTION_CONFIG}\n          projection=\"geoMercator\"\n          width={600}\n          height={220}\n          data-tip=\"\"\n        >\n        <ZoomableGroup zoom={1}>\n          <Geographies geography={INDIA_TOPO_JSON}>\n            {({ geographies }) =>\n              geographies.map(geo => {\n                //console.log(geo.id);\n                const current = data.find(s => s.id === geo.id);\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\n                    style={geographyStyle}\n                    onMouseEnter={onMouseEnter(geo, current)}\n                    onMouseLeave={onMouseLeave}\n                  />\n                );\n              })\n            }\n          </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n        <LinearGradient data={gradientData} />\n        <div className=\"center\">\n          <button className=\"mt16\" onClick={onChangeButtonClick}>Change</button>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}